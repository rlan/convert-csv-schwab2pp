# This workflow will install Python dependencies, run tests and lint with a single version of Python
# GitHub docs: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
# uv docs: https://docs.astral.sh/uv/guides/integration/github/
# Ref: https://github.com/johnthagen/python-blueprint/blob/e5cb1cc415f66d5956ea8fb4273b1b822ae829d2/.github/workflows/ci.yml


name: Testing

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

env:
  # Use a specific version of uv for reproducibility
  UV_VERSION: "0.7.3"

jobs:
  test:
    strategy:
      matrix:
        # Common platforms: ["ubuntu-latest", "macos-latest", "windows-latest"]
        os: ["ubuntu-latest"]
        # uv supports python 3.8 and higher
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout (official GitHub action)
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      # Caching is enabled by default for GitHub-hosted runners:
      #   https://github.com/astral-sh/setup-uv?tab=readme-ov-file#enable-caching
      with:
        version: ${{ env.UV_VERSION }}
        # All uv commands will use this python version, otherwise the one inside 
        # .python-version will take precedence.
        python-version: ${{ matrix.python-version }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install the project
      run: |
        uv sync --locked

    - name: Test no arguments
      run: |
        schwab2pp

    - name: Test help
      run: |
        schwab2pp --help

    - name: Test with example.csv
      run: |
        schwab2pp example.csv test.csv
        diff example_out.csv test.csv

  quality:
    strategy:
      matrix:
        # Common platforms: ["ubuntu-latest", "macos-latest", "windows-latest"]
        os: ["ubuntu-latest"]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout (official GitHub action)
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      # Caching is enabled by default for GitHub-hosted runners:
      #   https://github.com/astral-sh/setup-uv?tab=readme-ov-file#enable-caching
      with:
        version: ${{ env.UV_VERSION }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: ".python-version"

    - name: Install dependencies
      run: uv sync --locked --group lint

    - name: Run codespell
      run: |
        uv run codespell ./src

    - name: Run ruff check
      run: |
        uv run ruff check --output-format=github ./src

    - name: Run ruff format
      run: |
        uv run ruff format --check ./src
